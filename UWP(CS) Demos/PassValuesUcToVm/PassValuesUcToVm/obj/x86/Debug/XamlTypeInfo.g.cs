//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace PassValuesUcToVm
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[50];
            _typeNameTable[0] = "Template10.Common.BootStrapper";
            _typeNameTable[1] = "Windows.UI.Xaml.Application";
            _typeNameTable[2] = "Template10.Common.StateItems";
            _typeNameTable[3] = "System.Collections.Generic.Dictionary`2<String, Object>";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "String";
            _typeNameTable[6] = "Template10.Services.NavigationService.INavigationService";
            _typeNameTable[7] = "System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>";
            _typeNameTable[8] = "System.MulticastDelegate";
            _typeNameTable[9] = "System.Delegate";
            _typeNameTable[10] = "TimeSpan";
            _typeNameTable[11] = "System.ValueType";
            _typeNameTable[12] = "Boolean";
            _typeNameTable[13] = "Windows.ApplicationModel.Activation.IActivatedEventArgs";
            _typeNameTable[14] = "Template10.Controls.ModalDialog";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[16] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[17] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[18] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[19] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[20] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[21] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[22] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[23] = "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior";
            _typeNameTable[24] = "Microsoft.Xaml.Interactions.Core.ComparisonConditionType";
            _typeNameTable[25] = "System.Enum";
            _typeNameTable[26] = "Microsoft.Xaml.Interactions.Media.ControlStoryboardAction";
            _typeNameTable[27] = "Windows.UI.Xaml.Media.Animation.Storyboard";
            _typeNameTable[28] = "Microsoft.Xaml.Interactions.Media.ControlStoryboardOption";
            _typeNameTable[29] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[30] = "System.Windows.Input.ICommand";
            _typeNameTable[31] = "Windows.UI.Xaml.Data.IValueConverter";
            _typeNameTable[32] = "PassValuesUcToVm.UserControls.MainPageUserControl";
            _typeNameTable[33] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[34] = "PassValuesUcToVm.ViewModels.MainPageViewModel";
            _typeNameTable[35] = "Template10.Mvvm.ViewModelBase";
            _typeNameTable[36] = "Template10.Mvvm.BindableBase";
            _typeNameTable[37] = "System.Collections.ObjectModel.ObservableCollection`1<PassValuesUcToVm.Models.MainPageModel>";
            _typeNameTable[38] = "System.Collections.ObjectModel.Collection`1<PassValuesUcToVm.Models.MainPageModel>";
            _typeNameTable[39] = "PassValuesUcToVm.Models.MainPageModel";
            _typeNameTable[40] = "Template10.Common.IDispatcherWrapper";
            _typeNameTable[41] = "Template10.Common.IStateItems";
            _typeNameTable[42] = "Template10.Controls.PageHeader";
            _typeNameTable[43] = "Windows.UI.Xaml.Controls.CommandBar";
            _typeNameTable[44] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[45] = "Windows.UI.Xaml.Controls.Symbol";
            _typeNameTable[46] = "Windows.UI.Xaml.Controls.Frame";
            _typeNameTable[47] = "Double";
            _typeNameTable[48] = "PassValuesUcToVm.Views.MainPage";
            _typeNameTable[49] = "Windows.UI.Xaml.Controls.Page";

            _typeTable = new global::System.Type[50];
            _typeTable[0] = typeof(global::Template10.Common.BootStrapper);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Application);
            _typeTable[2] = typeof(global::Template10.Common.StateItems);
            _typeTable[3] = typeof(global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::System.String);
            _typeTable[6] = typeof(global::Template10.Services.NavigationService.INavigationService);
            _typeTable[7] = typeof(global::System.Func<global::Windows.ApplicationModel.Activation.SplashScreen, global::Windows.UI.Xaml.Controls.UserControl>);
            _typeTable[8] = typeof(global::System.MulticastDelegate);
            _typeTable[9] = typeof(global::System.Delegate);
            _typeTable[10] = typeof(global::System.TimeSpan);
            _typeTable[11] = typeof(global::System.ValueType);
            _typeTable[12] = typeof(global::System.Boolean);
            _typeTable[13] = typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs);
            _typeTable[14] = typeof(global::Template10.Controls.ModalDialog);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[17] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[18] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[21] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[22] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[23] = typeof(global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior);
            _typeTable[24] = typeof(global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType);
            _typeTable[25] = typeof(global::System.Enum);
            _typeTable[26] = typeof(global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction);
            _typeTable[27] = typeof(global::Windows.UI.Xaml.Media.Animation.Storyboard);
            _typeTable[28] = typeof(global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption);
            _typeTable[29] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[30] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Data.IValueConverter);
            _typeTable[32] = typeof(global::PassValuesUcToVm.UserControls.MainPageUserControl);
            _typeTable[33] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[34] = typeof(global::PassValuesUcToVm.ViewModels.MainPageViewModel);
            _typeTable[35] = typeof(global::Template10.Mvvm.ViewModelBase);
            _typeTable[36] = typeof(global::Template10.Mvvm.BindableBase);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::PassValuesUcToVm.Models.MainPageModel>);
            _typeTable[38] = typeof(global::System.Collections.ObjectModel.Collection<global::PassValuesUcToVm.Models.MainPageModel>);
            _typeTable[39] = typeof(global::PassValuesUcToVm.Models.MainPageModel);
            _typeTable[40] = typeof(global::Template10.Common.IDispatcherWrapper);
            _typeTable[41] = typeof(global::Template10.Common.IStateItems);
            _typeTable[42] = typeof(global::Template10.Controls.PageHeader);
            _typeTable[43] = typeof(global::Windows.UI.Xaml.Controls.CommandBar);
            _typeTable[44] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[45] = typeof(global::Windows.UI.Xaml.Controls.Symbol);
            _typeTable[46] = typeof(global::Windows.UI.Xaml.Controls.Frame);
            _typeTable[47] = typeof(global::System.Double);
            _typeTable[48] = typeof(global::PassValuesUcToVm.Views.MainPage);
            _typeTable[49] = typeof(global::Windows.UI.Xaml.Controls.Page);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_2_StateItems() { return new global::Template10.Common.StateItems(); }
        private object Activate_3_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>(); }
        private object Activate_14_ModalDialog() { return new global::Template10.Controls.ModalDialog(); }
        private object Activate_18_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_21_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_22_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_23_DataTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior(); }
        private object Activate_26_ControlStoryboardAction() { return new global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction(); }
        private object Activate_29_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_32_MainPageUserControl() { return new global::PassValuesUcToVm.UserControls.MainPageUserControl(); }
        private object Activate_34_MainPageViewModel() { return new global::PassValuesUcToVm.ViewModels.MainPageViewModel(); }
        private object Activate_37_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::PassValuesUcToVm.Models.MainPageModel>(); }
        private object Activate_38_Collection() { return new global::System.Collections.ObjectModel.Collection<global::PassValuesUcToVm.Models.MainPageModel>(); }
        private object Activate_39_MainPageModel() { return new global::PassValuesUcToVm.Models.MainPageModel(); }
        private object Activate_42_PageHeader() { return new global::Template10.Controls.PageHeader(); }
        private object Activate_48_MainPage() { return new global::PassValuesUcToVm.Views.MainPage(); }
        private void MapAdd_2_StateItems(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void MapAdd_3_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_18_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_22_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::PassValuesUcToVm.Models.MainPageModel>)instance;
            var newItem = (global::PassValuesUcToVm.Models.MainPageModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_38_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::PassValuesUcToVm.Models.MainPageModel>)instance;
            var newItem = (global::PassValuesUcToVm.Models.MainPageModel)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Template10.Common.BootStrapper
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Application"));
                userType.AddMemberName("SessionState");
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("SplashFactory");
                userType.AddMemberName("CacheMaxDuration");
                userType.AddMemberName("ShowShellBackButton");
                userType.AddMemberName("ForceShowShellBackButton");
                userType.AddMemberName("OriginalActivatedArgs");
                userType.AddMemberName("ModalDialog");
                userType.AddMemberName("ModalContent");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Application
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Template10.Common.StateItems
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.Generic.Dictionary`2<String, Object>"));
                userType.DictionaryAdd = MapAdd_2_StateItems;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 3:   //  System.Collections.Generic.Dictionary`2<String, Object>
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_Dictionary;
                userType.DictionaryAdd = MapAdd_3_Dictionary;
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  String
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Template10.Services.NavigationService.INavigationService
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  System.MulticastDelegate
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 9:   //  System.Delegate
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 10:   //  TimeSpan
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  System.ValueType
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 12:   //  Boolean
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Windows.ApplicationModel.Activation.IActivatedEventArgs
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  Template10.Controls.ModalDialog
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 18:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_18_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_21_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 22:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_22_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  Microsoft.Xaml.Interactions.Core.DataTriggerBehavior
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_23_DataTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Value");
                userType.AddMemberName("ComparisonCondition");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 24:   //  Microsoft.Xaml.Interactions.Core.ComparisonConditionType
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Equal", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.Equal);
                userType.AddEnumValue("NotEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.NotEqual);
                userType.AddEnumValue("LessThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThan);
                userType.AddEnumValue("LessThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThanOrEqual);
                userType.AddEnumValue("GreaterThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThan);
                userType.AddEnumValue("GreaterThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThanOrEqual);
                xamlType = userType;
                break;

            case 25:   //  System.Enum
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 26:   //  Microsoft.Xaml.Interactions.Media.ControlStoryboardAction
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_26_ControlStoryboardAction;
                userType.AddMemberName("Storyboard");
                userType.AddMemberName("ControlStoryboardOption");
                xamlType = userType;
                break;

            case 27:   //  Windows.UI.Xaml.Media.Animation.Storyboard
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Microsoft.Xaml.Interactions.Media.ControlStoryboardOption
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Play", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.Play);
                userType.AddEnumValue("Stop", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.Stop);
                userType.AddEnumValue("TogglePlayPause", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.TogglePlayPause);
                userType.AddEnumValue("Pause", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.Pause);
                userType.AddEnumValue("Resume", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.Resume);
                userType.AddEnumValue("SkipToFill", global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption.SkipToFill);
                xamlType = userType;
                break;

            case 29:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_29_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 30:   //  System.Windows.Input.ICommand
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.Data.IValueConverter
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  PassValuesUcToVm.UserControls.MainPageUserControl
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_32_MainPageUserControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 34:   //  PassValuesUcToVm.ViewModels.MainPageViewModel
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_34_MainPageViewModel;
                userType.AddMemberName("sampleList");
                userType.AddMemberName("Value");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Template10.Mvvm.ViewModelBase
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.BindableBase"));
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("Dispatcher");
                userType.AddMemberName("SessionState");
                xamlType = userType;
                break;

            case 36:   //  Template10.Mvvm.BindableBase
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.ObservableCollection`1<PassValuesUcToVm.Models.MainPageModel>
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<PassValuesUcToVm.Models.MainPageModel>"));
                userType.CollectionAdd = VectorAdd_37_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  System.Collections.ObjectModel.Collection`1<PassValuesUcToVm.Models.MainPageModel>
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_Collection;
                userType.CollectionAdd = VectorAdd_38_Collection;
                xamlType = userType;
                break;

            case 39:   //  PassValuesUcToVm.Models.MainPageModel
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.BindableBase"));
                userType.Activator = Activate_39_MainPageModel;
                userType.AddMemberName("sampleText");
                userType.AddMemberName("isFav");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  Template10.Common.IDispatcherWrapper
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  Template10.Common.IStateItems
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  Template10.Controls.PageHeader
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.CommandBar"));
                userType.Activator = Activate_42_PageHeader;
                userType.AddMemberName("BackButtonVisibility");
                userType.AddMemberName("BackButtonContent");
                userType.AddMemberName("Frame");
                userType.AddMemberName("VisualStateNarrowMinWidth");
                userType.AddMemberName("VisualStateNormalMinWidth");
                userType.AddMemberName("Text");
                xamlType = userType;
                break;

            case 43:   //  Windows.UI.Xaml.Controls.CommandBar
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 44:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  Windows.UI.Xaml.Controls.Symbol
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 46:   //  Windows.UI.Xaml.Controls.Frame
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 47:   //  Double
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 48:   //  PassValuesUcToVm.Views.MainPage
                userType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_48_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Template10.Template10__Library__XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_BootStrapper_SessionState(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.SessionState;
        }
        private void set_0_BootStrapper_SessionState(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.SessionState = (global::Template10.Common.StateItems)Value;
        }
        private object get_1_BootStrapper_NavigationService(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.NavigationService;
        }
        private object get_2_BootStrapper_SplashFactory(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.SplashFactory;
        }
        private object get_3_BootStrapper_CacheMaxDuration(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.CacheMaxDuration;
        }
        private void set_3_BootStrapper_CacheMaxDuration(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.CacheMaxDuration = (global::System.TimeSpan)Value;
        }
        private object get_4_BootStrapper_ShowShellBackButton(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ShowShellBackButton;
        }
        private void set_4_BootStrapper_ShowShellBackButton(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ShowShellBackButton = (global::System.Boolean)Value;
        }
        private object get_5_BootStrapper_ForceShowShellBackButton(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ForceShowShellBackButton;
        }
        private void set_5_BootStrapper_ForceShowShellBackButton(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ForceShowShellBackButton = (global::System.Boolean)Value;
        }
        private object get_6_BootStrapper_OriginalActivatedArgs(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.OriginalActivatedArgs;
        }
        private object get_7_BootStrapper_ModalDialog(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ModalDialog;
        }
        private object get_8_BootStrapper_ModalContent(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ModalContent;
        }
        private void set_8_BootStrapper_ModalContent(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ModalContent = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_9_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_9_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_10_EventTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_11_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_11_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_12_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_12_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_13_EventTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_14_DataTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_15_DataTriggerBehavior_Binding(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Binding;
        }
        private void set_15_DataTriggerBehavior_Binding(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Binding = (global::System.Object)Value;
        }
        private object get_16_DataTriggerBehavior_Value(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Value;
        }
        private void set_16_DataTriggerBehavior_Value(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Value = (global::System.Object)Value;
        }
        private object get_17_DataTriggerBehavior_ComparisonCondition(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.ComparisonCondition;
        }
        private void set_17_DataTriggerBehavior_ComparisonCondition(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.ComparisonCondition = (global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType)Value;
        }
        private object get_18_DataTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_19_ControlStoryboardAction_Storyboard(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction)instance;
            return that.Storyboard;
        }
        private void set_19_ControlStoryboardAction_Storyboard(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction)instance;
            that.Storyboard = (global::Windows.UI.Xaml.Media.Animation.Storyboard)Value;
        }
        private object get_20_ControlStoryboardAction_ControlStoryboardOption(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction)instance;
            return that.ControlStoryboardOption;
        }
        private void set_20_ControlStoryboardAction_ControlStoryboardOption(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardAction)instance;
            that.ControlStoryboardOption = (global::Microsoft.Xaml.Interactions.Media.ControlStoryboardOption)Value;
        }
        private object get_21_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_21_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_22_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_22_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_23_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_23_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Windows.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_24_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_24_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_25_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_25_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }
        private object get_26_MainPageViewModel_sampleList(object instance)
        {
            var that = (global::PassValuesUcToVm.ViewModels.MainPageViewModel)instance;
            return that.sampleList;
        }
        private void set_26_MainPageViewModel_sampleList(object instance, object Value)
        {
            var that = (global::PassValuesUcToVm.ViewModels.MainPageViewModel)instance;
            that.sampleList = (global::System.Collections.ObjectModel.ObservableCollection<global::PassValuesUcToVm.Models.MainPageModel>)Value;
        }
        private object get_27_MainPageModel_sampleText(object instance)
        {
            var that = (global::PassValuesUcToVm.Models.MainPageModel)instance;
            return that.sampleText;
        }
        private void set_27_MainPageModel_sampleText(object instance, object Value)
        {
            var that = (global::PassValuesUcToVm.Models.MainPageModel)instance;
            that.sampleText = (global::System.String)Value;
        }
        private object get_28_MainPageModel_isFav(object instance)
        {
            var that = (global::PassValuesUcToVm.Models.MainPageModel)instance;
            return that.isFav;
        }
        private void set_28_MainPageModel_isFav(object instance, object Value)
        {
            var that = (global::PassValuesUcToVm.Models.MainPageModel)instance;
            that.isFav = (global::System.Boolean)Value;
        }
        private object get_29_MainPageViewModel_Value(object instance)
        {
            var that = (global::PassValuesUcToVm.ViewModels.MainPageViewModel)instance;
            return that.Value;
        }
        private void set_29_MainPageViewModel_Value(object instance, object Value)
        {
            var that = (global::PassValuesUcToVm.ViewModels.MainPageViewModel)instance;
            that.Value = (global::System.String)Value;
        }
        private object get_30_ViewModelBase_NavigationService(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.NavigationService;
        }
        private void set_30_ViewModelBase_NavigationService(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.NavigationService = (global::Template10.Services.NavigationService.INavigationService)Value;
        }
        private object get_31_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.Dispatcher;
        }
        private void set_31_ViewModelBase_Dispatcher(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.Dispatcher = (global::Template10.Common.IDispatcherWrapper)Value;
        }
        private object get_32_ViewModelBase_SessionState(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.SessionState;
        }
        private void set_32_ViewModelBase_SessionState(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.SessionState = (global::Template10.Common.IStateItems)Value;
        }
        private object get_33_PageHeader_BackButtonVisibility(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.BackButtonVisibility;
        }
        private void set_33_PageHeader_BackButtonVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.BackButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_34_PageHeader_BackButtonContent(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.BackButtonContent;
        }
        private void set_34_PageHeader_BackButtonContent(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.BackButtonContent = (global::Windows.UI.Xaml.Controls.Symbol)Value;
        }
        private object get_35_PageHeader_Frame(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.Frame;
        }
        private void set_35_PageHeader_Frame(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.Frame = (global::Windows.UI.Xaml.Controls.Frame)Value;
        }
        private object get_36_PageHeader_VisualStateNarrowMinWidth(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.VisualStateNarrowMinWidth;
        }
        private void set_36_PageHeader_VisualStateNarrowMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.VisualStateNarrowMinWidth = (global::System.Double)Value;
        }
        private object get_37_PageHeader_VisualStateNormalMinWidth(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.VisualStateNormalMinWidth;
        }
        private void set_37_PageHeader_VisualStateNormalMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.VisualStateNormalMinWidth = (global::System.Double)Value;
        }
        private object get_38_PageHeader_Text(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.Text;
        }
        private void set_38_PageHeader_Text(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.Text = (global::System.String)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember xamlMember = null;
            global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Template10.Common.BootStrapper.SessionState":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "SessionState", "Template10.Common.StateItems");
                xamlMember.Getter = get_0_BootStrapper_SessionState;
                xamlMember.Setter = set_0_BootStrapper_SessionState;
                break;
            case "Template10.Common.BootStrapper.NavigationService":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "NavigationService", "Template10.Services.NavigationService.INavigationService");
                xamlMember.Getter = get_1_BootStrapper_NavigationService;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.SplashFactory":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "SplashFactory", "System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>");
                xamlMember.Getter = get_2_BootStrapper_SplashFactory;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.CacheMaxDuration":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "CacheMaxDuration", "TimeSpan");
                xamlMember.Getter = get_3_BootStrapper_CacheMaxDuration;
                xamlMember.Setter = set_3_BootStrapper_CacheMaxDuration;
                break;
            case "Template10.Common.BootStrapper.ShowShellBackButton":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "ShowShellBackButton", "Boolean");
                xamlMember.Getter = get_4_BootStrapper_ShowShellBackButton;
                xamlMember.Setter = set_4_BootStrapper_ShowShellBackButton;
                break;
            case "Template10.Common.BootStrapper.ForceShowShellBackButton":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "ForceShowShellBackButton", "Boolean");
                xamlMember.Getter = get_5_BootStrapper_ForceShowShellBackButton;
                xamlMember.Setter = set_5_BootStrapper_ForceShowShellBackButton;
                break;
            case "Template10.Common.BootStrapper.OriginalActivatedArgs":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "OriginalActivatedArgs", "Windows.ApplicationModel.Activation.IActivatedEventArgs");
                xamlMember.Getter = get_6_BootStrapper_OriginalActivatedArgs;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.ModalDialog":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "ModalDialog", "Template10.Controls.ModalDialog");
                xamlMember.Getter = get_7_BootStrapper_ModalDialog;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.ModalContent":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "ModalContent", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_8_BootStrapper_ModalContent;
                xamlMember.Setter = set_8_BootStrapper_ModalContent;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_9_Interaction_Behaviors;
                xamlMember.Setter = set_9_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_EventTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_11_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_12_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.AssociatedObject":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_13_EventTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_DataTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Binding":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Binding", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_DataTriggerBehavior_Binding;
                xamlMember.Setter = set_15_DataTriggerBehavior_Binding;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Value":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_DataTriggerBehavior_Value;
                xamlMember.Setter = set_16_DataTriggerBehavior_Value;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.ComparisonCondition":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "ComparisonCondition", "Microsoft.Xaml.Interactions.Core.ComparisonConditionType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_DataTriggerBehavior_ComparisonCondition;
                xamlMember.Setter = set_17_DataTriggerBehavior_ComparisonCondition;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.AssociatedObject":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_18_DataTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Media.ControlStoryboardAction.Storyboard":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Media.ControlStoryboardAction");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Storyboard", "Windows.UI.Xaml.Media.Animation.Storyboard");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_ControlStoryboardAction_Storyboard;
                xamlMember.Setter = set_19_ControlStoryboardAction_Storyboard;
                break;
            case "Microsoft.Xaml.Interactions.Media.ControlStoryboardAction.ControlStoryboardOption":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Media.ControlStoryboardAction");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "ControlStoryboardOption", "Microsoft.Xaml.Interactions.Media.ControlStoryboardOption");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ControlStoryboardAction_ControlStoryboardOption;
                xamlMember.Setter = set_20_ControlStoryboardAction_ControlStoryboardOption;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_InvokeCommandAction_Command;
                xamlMember.Setter = set_21_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_22_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "InputConverter", "Windows.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_23_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_24_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_25_InvokeCommandAction_InputConverterLanguage;
                break;
            case "PassValuesUcToVm.ViewModels.MainPageViewModel.sampleList":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PassValuesUcToVm.ViewModels.MainPageViewModel");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "sampleList", "System.Collections.ObjectModel.ObservableCollection`1<PassValuesUcToVm.Models.MainPageModel>");
                xamlMember.Getter = get_26_MainPageViewModel_sampleList;
                xamlMember.Setter = set_26_MainPageViewModel_sampleList;
                break;
            case "PassValuesUcToVm.Models.MainPageModel.sampleText":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PassValuesUcToVm.Models.MainPageModel");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "sampleText", "String");
                xamlMember.Getter = get_27_MainPageModel_sampleText;
                xamlMember.Setter = set_27_MainPageModel_sampleText;
                break;
            case "PassValuesUcToVm.Models.MainPageModel.isFav":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PassValuesUcToVm.Models.MainPageModel");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "isFav", "Boolean");
                xamlMember.Getter = get_28_MainPageModel_isFav;
                xamlMember.Setter = set_28_MainPageModel_isFav;
                break;
            case "PassValuesUcToVm.ViewModels.MainPageViewModel.Value":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("PassValuesUcToVm.ViewModels.MainPageViewModel");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Value", "String");
                xamlMember.Getter = get_29_MainPageViewModel_Value;
                xamlMember.Setter = set_29_MainPageViewModel_Value;
                break;
            case "Template10.Mvvm.ViewModelBase.NavigationService":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "NavigationService", "Template10.Services.NavigationService.INavigationService");
                xamlMember.Getter = get_30_ViewModelBase_NavigationService;
                xamlMember.Setter = set_30_ViewModelBase_NavigationService;
                break;
            case "Template10.Mvvm.ViewModelBase.Dispatcher":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Dispatcher", "Template10.Common.IDispatcherWrapper");
                xamlMember.Getter = get_31_ViewModelBase_Dispatcher;
                xamlMember.Setter = set_31_ViewModelBase_Dispatcher;
                break;
            case "Template10.Mvvm.ViewModelBase.SessionState":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "SessionState", "Template10.Common.IStateItems");
                xamlMember.Getter = get_32_ViewModelBase_SessionState;
                xamlMember.Setter = set_32_ViewModelBase_SessionState;
                break;
            case "Template10.Controls.PageHeader.BackButtonVisibility":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "BackButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_PageHeader_BackButtonVisibility;
                xamlMember.Setter = set_33_PageHeader_BackButtonVisibility;
                break;
            case "Template10.Controls.PageHeader.BackButtonContent":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "BackButtonContent", "Windows.UI.Xaml.Controls.Symbol");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_PageHeader_BackButtonContent;
                xamlMember.Setter = set_34_PageHeader_BackButtonContent;
                break;
            case "Template10.Controls.PageHeader.Frame":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Frame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_PageHeader_Frame;
                xamlMember.Setter = set_35_PageHeader_Frame;
                break;
            case "Template10.Controls.PageHeader.VisualStateNarrowMinWidth":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "VisualStateNarrowMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_PageHeader_VisualStateNarrowMinWidth;
                xamlMember.Setter = set_36_PageHeader_VisualStateNarrowMinWidth;
                break;
            case "Template10.Controls.PageHeader.VisualStateNormalMinWidth":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "VisualStateNormalMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_PageHeader_VisualStateNormalMinWidth;
                xamlMember.Setter = set_37_PageHeader_VisualStateNormalMinWidth;
                break;
            case "Template10.Controls.PageHeader.Text":
                userType = (global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_38_PageHeader_Text;
                xamlMember.Setter = set_38_PageHeader_Text;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlSystemBaseType
    {
        global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::PassValuesUcToVm.PassValuesUcToVm_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

